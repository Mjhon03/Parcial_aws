name: Deploy Lambda Function

on:
  push:
    branches:
      - main  # Cambia si usas otra rama principal

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # 3. Instalar dependencias necesarias (SAM CLI)
      - name: Install AWS SAM CLI
        run: pip install aws-sam-cli

      # 4. Configurar variables de entorno y desplegar Lambda
      - name: Deploy Lambda Function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          # Nombre y directorio de la función Lambda
          LAMBDA_FUNCTION_NAME="saludo_simple"
          FUNCTION_DIR="app/$LAMBDA_FUNCTION_NAME"

          # Validar que el directorio exista
          if [ ! -d "$FUNCTION_DIR" ]; then
            echo "Error: El directorio $FUNCTION_DIR no existe."
            exit 1
          fi

          # Crear el archivo template.yaml dinámico
          echo "Generando template.yaml"
          printf '%s\n' \
"AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ${LAMBDA_FUNCTION_NAME}:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ${LAMBDA_FUNCTION_NAME}
      Handler: saludo_simple.saludo_simple.handler
      Runtime: python3.9
      CodeUri: ${FUNCTION_DIR}
      Timeout: 30
      MemorySize: 128" > template.yaml

          # Construir y desplegar con SAM
          sam build --template-file template.yaml
          sam deploy --stack-name ${LAMBDA_FUNCTION_NAME}-stack --capabilities CAPABILITY_IAM

          # Limpiar archivos temporales
          rm -f template.yaml
